#!/usr/bin/env bash

set -e

# Require VERSION to be set, and not blank. If missing, exit with the message
# "Must specify version".
: "${VERSION:?Must specify version}"

# Calculate the SHA256 checksum for the release. We fetch it straight from
# GitHub with `curl` and pipe the output to the `shasum` command to get a
# SHA256 checksum. That command outputs two words and we just need the first,
# so fetch it with `awk`
BASE="https://github.com/nerves-hub/nerves_hub_cli/releases/download/${VERSION}"

MACOS_X86_64_SHASUM=$(curl -sL "${BASE}/macos-x86_64.tar.xz" | shasum -a 256 | awk '{ print $1 }')
MACOS_AARCH64_SHASUM=$(curl -sL "${BASE}/macos-aarch64.tar.xz" | shasum -a 256 | awk '{ print $1 }')
LINUX_X86_64_SHASUM=$(curl -sL "${BASE}/linux-x86_64.tar.xz" | shasum -a 256 | awk '{ print $1 }')
LINUX_AARCH64_SHASUM=$(curl -sL "${BASE}/linux-aarch64.tar.xz" | shasum -a 256 | awk '{ print $1 }')

# This writes a new version of the Formula/nh.rb file using the
# VERSION number and SHASUM we set above.
#
# `cat <<EOF` prints a string with the formula (i.e. the entire
# `Nh` class definition down to the second `EOF` line). This is
# written to the nh.rb file using `>` redirection.

# The `${0%/*}/../../Formula/nh.rb` part finds the cli.rb
# file relative to this update-formula file itself. `${0%/*}` is bash
# parameter expansion which deletes the first occurrence of `/*` (i.e.
# everything after the last slash) from the value of `$0`. Then we just use
# standard relative paths to go up 2 directories.
cat <<EOF > "${0%/*}/../../Formula/nh.rb"
class Nh < Formula
  desc "Command-line interface for the NervesHub platform"
  homepage "https://github.com/nerves-hub/nerves_hub_cli"

  version "${VERSION#v}"

  base_download_url = "https://github.com/nerves-hub/nerves_hub_cli/releases/download/v#{version}"

  macos_x86_64_sha = "${MACOS_X86_64_SHASUM}"
  macos_aarch64_sha = "${MACOS_AARCH64_SHASUM}"
  linux_x86_64_sha = "${LINUX_X86_64_SHASUM}"
  linux_aarch64_sha = "${LINUX_AARCH64_SHASUM}"

  if OS.mac? && Hardware::CPU.intel?
    url "#{base_download_url}/macos-x86_64.tar.xz"
    sha256 macos_x86_64_sha
  end

  if OS.mac? && Hardware::CPU.arm?
    url "#{base_download_url}/macos-aarch64.tar.xz"
    sha256 macos_aarch64_sha
  end

  if OS.linux? && Hardware::CPU.intel?
    url "#{base_download_url}/linux-x86_64.tar.xz"
    sha256 linux_x86_64_sha
  end

  if OS.linux? && Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
    url "#{base_download_url}/linux-aarch64.tar.xz"
    sha256 linux_aarch64_sha
  end

  def install
    bin.install "nh"
  end
end
EOF
